/**
 * Grid system
 * --------------------------------------------------
 */


// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

.container {
  @include container-fixed();

  @include mq($screen-sm) {
    width: $container-sm;
  }
  @include mq($screen-md) {
    width: $container-md;
  }
  @include mq($screen-lg) {
    width: $container-lg;
  }
}


// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

.container-fluid {
  @include container-fixed();
}

.container-fluid-max-width {
  @extend .container-fluid;
  max-width: $container-large-desktop;
}


// Row
//
// Rows contain and clear the floats of your columns.

.row {
  @include make-row();

  // Why didn't you think of this, Bootstrap?
  &.no-gutter {
    margin-left: 0;
    margin-right: 0;

    [class*='col-']:not(:first-child),
    [class*='col-']:not(:last-child) {
      padding-right: 0;
      padding-left: 0;
    }
  }
}


// Columns
//
// Common styles for small and large grid columns

@include make-grid-columns();


// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

@include make-grid(xs);


// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@include mq($screen-sm) {
  @include make-grid(sm);
}


// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@include mq($screen-md) {
  @include make-grid(md);
}


// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.

@include mq($screen-lg) {
  @include make-grid(lg);
}
