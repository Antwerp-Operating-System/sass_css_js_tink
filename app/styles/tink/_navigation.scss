/**
 * Navigation
 * --------------------------------------------------
 * - navigation behaviour states
 * - top navigation
 * - side navigation:
 *   - left navigation
 *   - right navigation
 * - bar
 * - back-to top
 */




/**
 * HTML behaviour when side navigation is open
 */

html.nav-left-open,
html.nav-right-open {

  body {
    overflow-x: hidden;
  }
}

html.nav-left-open {

  @include mq($screen-sm, "max") {
    .main {
      transform: translate(rem($nav-aside-width), 0);
    }
    .nav-left {
      transform: translate(0, 0);
    }
  }
}

html.nav-right-open {

  @include mq($screen-sm, "max") {
    .main {
      transform: translate(rem(-$nav-aside-width), 0);
    }
    .nav-right {
      transform: translate(0, 0);
    }
  }
}




/**
 * Default behaviour is that there is a fixed nav-top,
 * so we need to 'fix' the body's padding
 */

html {
  &.has-nav-left {
    .main {
      @include mq($screen-sm) {
        padding-left: rem($nav-aside-width);
      }
    }
  }

  &.has-nav-right {
    .main {
      @include mq($screen-sm) {
        padding-right: rem($nav-aside-width);
      }
    }
  }

  /**
   * If the nav-top for some reason needs to scroll with the page
   */
  &.has-relative-nav-top {
    .nav-top {
      position: relative;
    }
  }
}


.main {
  transition: opacity ($animation-speed * 2) linear, padding $animation-speed linear, transform $animation-speed linear;

  /**
   * ng-animate classes
   */
  &.ng-enter {
    opacity: 0;
  }
  &.ng-leave {
    opacity: 1;
  }
  &.ng-enter.ng-enter-active {
    opacity: 1;
  }
  &.ng-leave.ng-leave-active {
    opacity: 0;
  }
}




/**
 * Top navigation
 */

.nav-top {
  @include bar($nav-top-height, $nav-top-bg-color, $nav-top-color, $nav-top-link-color, $nav-top-link-hover-color, $nav-top-link-bg-hover-color, $nav-top-padding);
  left: 0;
  position: fixed;
  top: 0;
  transition: height $animation-speed linear;
  width: 100%;
  z-index: layer('nav-top');

  a.btn,
  a.btn-primary,
  button,
  input {
    border: none;
  }

  &-branding {
    float: left;
    height: rem($nav-top-height);
    line-height: rem($nav-top-height);
    overflow: hidden;
    position: relative;
    z-index: layer('base');

    a {
      color: $nav-top-link-color;
      text-decoration: none;

      &:hover,
      &:active,
      &:focus {
        color: $nav-top-link-hover-color;
      }
    }

    li {
      float: left;
      height: rem($nav-top-height);
      line-height: rem($nav-top-height);

      &.logo {
        padding: 0;

        a {
          background: $logo-bg-color image-url($logo) no-repeat center center;
          background-size: cover;
          display: block;
          height: rem($logo-height);
          margin: rem(0 $nav-top-padding 0 0);
          padding: 0;
          // transition: height $animation-speed linear;
          width: rem($logo-width);

          span {
            @extend .sr-only;
          }
        }
      }

      &.toggle {
        cursor: pointer;

        @include mq($screen-sm) {
          display: none;
        }
      }

      &.app {
        padding: rem(0 $nav-top-padding);
        @include mq($screen-sm, "max") {
          display: none;
        }
      }
    }

    img {
      float: left;
      height: rem($nav-top-height);
      width: auto;
    }

    h1 {
      font-size: rem($font-size-base);
      font-weight: 700;
      line-height: rem($nav-top-height);
      margin: 0;

      span {
        font-weight: 400;
      }
    }
  }

  &-section-left {
    margin-left: rem($bar-padding / 2);
  }

  &-section-right {
    margin-right: rem($bar-padding / 2);
  }
}




/**
 * Side navigation
 */

.nav-aside {
  background: $nav-aside-bg-color;
  bottom: 0;
  position: fixed;
  top: rem($nav-top-height);
  transition: transform $animation-speed linear;
  width: rem($nav-aside-width);
  z-index: layer('nav-aside');

  /**
   * Styling for semi-transparent line
   */
  &:before {
    background: rgba(0, 0, 0, .12);
    bottom: 0;
    content: '';
    height: 100%;
    pointer-events: none;
    position: absolute;
    top: 0;
    width: 2px;
    z-index: layer("pseudo");
  }

  /**
   * For semantics & correct scrolling behaviour
   */
  > aside {
    height: 100%;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    -webkit-overflow-scrolling: -blackberry-touch;
  }

  ul {
    @extend .list-unstyled;
  }

  &-title {
    color: $nav-aside-title-color;
    font-size: 90%;
    font-weight: 600;
    margin-top: rem($nav-aside-vertical-padding / 2);
    padding: rem(0 $nav-aside-horizontal-padding);
    text-transform: uppercase;

    &:first-letter {
      font-size: 110%;
    }

    + ul {
      margin-top: rem(-$nav-aside-vertical-padding);
    }
  }

  &-section {
    padding: rem($nav-aside-vertical-padding 0);
    position: relative;

    /**
     * section bottom border
     */
    &:not(:last-child) {
      &:after {
        background: $nav-aside-section-border-color;
        bottom: 0;
        content: '';
        height: 1px;
        left: rem($nav-aside-horizontal-padding);
        position: absolute;
        right: rem($nav-aside-horizontal-padding);
      }
    }

    /**
     * Menu: all levels
     */
    li {
      a {
        color: $nav-aside-link-color;
        display: table;
        padding: rem($nav-aside-vertical-padding $nav-aside-horizontal-padding);
        text-decoration: none;
        width: 100%;

        &:hover,
        &:active,
        &:focus {
          background-color: $nav-aside-link-hover-background-color;
          color: $nav-aside-link-hover-color;

          .badge {
            background-color: $nav-aside-badge-hover-background-color;
            color: $nav-aside-badge-hover-color;
          }
        }

        &:focus {
          box-shadow: none;
        }

        > *, {
          display: table-cell;
          vertical-align: middle;
        }

        > i {
          padding: rem(1 10 0 0);
        }
      }

      &.active {
        a {
          color: $nav-aside-link-active-color;
          font-weight: 700;

          + ul {
            a {
              color: $nav-aside-link-color;
              font-weight: normal;

              &:hover,
              &:active,
              &:focus {
                background-color: $nav-aside-link-hover-background-color;
                color: $nav-aside-link-hover-color;
              }
            }
          }
        }
      }
    }

    /**
     * Menu first level
     */
    > ul {
      > li {
        border-bottom: 1px solid transparent;
        height: auto;
        overflow: hidden;
        position: relative;

        &.can-open {
          &:before {
            content: "\f0d7";
            font-family: FontAwesome;
            font-style: normal;
            font-weight: normal;
            pointer-events: none;
            position: absolute;
            right: rem($nav-aside-horizontal-padding);
            text-decoration: inherit;
            top: rem($nav-aside-vertical-padding);
            transition: color $animation-speed linear, transform $animation-speed linear;
            z-index: layer('pseudo');
          }

          &.open {
            border-bottom: 1px solid $nav-aside-bg-color;
            background: $nav-aside-item-open-color;

            &:before {
              transform: rotate(180deg);
            }

            > a {
              font-weight: 700;
            }
          }

          > a {
            padding-right: rem(30);
          }
        }

        &.has-active-item {
          > a {
            font-weight: 700;
          }
        }
      }


      /**
       * Menu second level
       */

      ul {
        display: none;

        li {
          a {
            padding: rem($nav-aside-item-vertical-padding $nav-aside-horizontal-padding $nav-aside-item-vertical-padding (2 * $nav-aside-horizontal-padding));
          }

          &.active {
            a {
              &:hover,
              &:active,
              &:focus {
                .badge {
                  background: $nav-aside-badge-active-background-hover-color;
                  color: $nav-aside-badge-active-hover-color;
                }
              }
            }

            .badge {
              background: $nav-aside-badge-active-background-color;
              color: $nav-aside-badge-active-color;
            }
          }
        }
      }
    }
  }

  .badge {
    background-color: $nav-aside-badge-background-color;
    color: $nav-aside-badge-color;
    float: right;
    margin-top: rem(5.5 - $badge-padding-vertical);
    transition: background $animation-speed linear, color $animation-speed linear;
  }
}




/**
 * Left navigation
 * (add-on for .nav-aside)
 */

.nav-left {
  left: 0;
  transform: translate(rem(-$nav-aside-width), 0);

  @include mq($screen-sm) {
    transform: translate(0, 0);
  }

  &:before {
    right: 0;
  }
}




/**
 * Right navigation
 * (add-on for .nav-aside)
 */

.nav-right {
  right: 0;
  transform: translate(rem($nav-aside-width), 0);

  @include mq($screen-sm) {
    transform: translate(0, 0);
  }

  &:before {
    left: 0;
  }
}




/**
 * Bar
 */
.bar {
  @include bar($nav-top-height, transparent, $bar-color);
}



/**
 * Back to top
 */
.back-to-top {
  background-color: $back-top-top-bgcolor;
  border: none;
  bottom: rem(16);
  color: $back-top-top-color;
  line-height: rem(0);
  opacity: 0;
  padding: rem(15 12 17);
  position: fixed;
  right: rem(16);
  transform: translate(0, rem(60));
  transition: background $animation-speed linear, opacity $animation-speed linear, transform $animation-speed linear;
  z-index: layer("above-pseudo");

  &:after {
    color: $white;
    content: '\f077';
    font-family: 'FontAwesome';
    font-weight: normal;
  }

  &:hover,
  &:active,
  &:focus  {
    background-color: $back-top-top-hover-bgcolor;
    color: $back-top-top-hover-color;
  }

  &.is-visible {
    opacity: 1;
    transform: translate(0, 0);
  }

  span {
    @extend .sr-only;
  }
}
