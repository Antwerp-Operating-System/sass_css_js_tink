/**
 * Navigation
 * --------------------------------------------------
 * - top navigation
 * - off-canvas nav
 * - nav states
 */



/**
 * Default behaviour is that there is a fixed top-nav,
 * so we need to 'fix' the body's padding
 */
body {
  padding-top: rem($top-nav-height);

  // If the top-nav for some reason needs to scroll with the page
  &.has-relative-top-nav {
    padding-top: 0;

    .top-nav {
      position: relative;
    }
  }
}

.main {
  transition: padding $animation-speed linear;

  @include mq($screen-sm) {
    padding-left: rem($nav-aside-width);
  }
}

@mixin bar($name, $bar-height, $bar-bg-color) {

  .#{$name} {
    background-color: $bar-bg-color;
    line-height: rem($bar-height);
    overflow: auto;

    > ul,
    &-section-left,
    &-section-right {
      @extend .list-inline;
      margin: 0;

      li {
        padding: 0;
      }

      a {
        color: $bar-link-color;
        outline: none;
        text-decoration: none;
        display: inline-block;
        line-height: rem($bar-height - $bar-padding);
        margin: rem(($bar-padding / 2) 0);
        padding: rem(0 $bar-padding);

        &:hover,
        &:active,
        &:focus {
          color: $bar-link-hover-color;
        }

        &:focus {
          box-shadow: 0 0 0 2px rgba($brand-light, .5);
        }
      }
    }

    &-section {
      position: relative;
      text-align: center;
      width: auto;

      &-left {
        float: left;
        margin-left: rem($bar-padding / 2);
      }

      &-center {
        display: inline-block;

        input[type="search"] {
          display: inline-block;
          width: auto;
        }
      }

      &-right {
        float: right;
        margin-right: rem($bar-padding / 2);
      }
    }
  }
}

// @mixin bar($name, $bar-height, $bar-bg-color, $bar-link-color, $bar-link-hover-color, $bar-padding) {

@include bar("top-nav", $top-nav-height, $top-nav-bg-color);

.top-nav {
  overflow: auto;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: layer('top-nav');

  &-branding {
    float: left;
    position: relative;
    z-index: layer("base");

    li {
      float: left;

      &.logo {
        a {
          float: left ;
          margin: rem(0 $bar-padding 0 0);
          padding: 0;
        }
      }

      &.toggle {
        @include mq($screen-sm) {
          display: none;
        }
      }

      &.app {
        @include mq($screen-sm, "max") {
          display: none;
        }
      }
    }

    img {
      float: left;
      height: rem($bar-height);
      width: auto;
    }

    h1 {
      font-size: rem($font-size-base);
      font-weight: 700;
      line-height: rem($top-nav-height);
      margin: 0;
    }
  }
}


@include bar("test", $top-nav-height, red);






/**
 * Side navigation (left)
 */

%nav-aside {
  background: $nav-aside-bg-color;
  bottom: 0;
  overflow: auto;
  position: fixed;
  top: rem($top-nav-height);
  transition: transform $animation-speed linear;
  width: rem($nav-aside-width);
  z-index: layer('nav-aside');
  -webkit-overflow-scrolling: touch;
  -webkit-overflow-scrolling: -blackberry-touch;

  &:before {
    background: rgba(0, 0, 0, .12);
    bottom: 0;
    content: '';
    height: 100%;
    pointer-events: none;
    position: absolute;
    top: 0;
    width: 2px;
    z-index: layer("pseudo");
  }

  ul {
    @extend .list-unstyled;
  }
}

.nav-left {
  @extend %nav-aside;
  left: 0;
  transform: translate(rem(-$nav-aside-width), 0);
  transition: transform $animation-speed linear;

  @include mq($screen-sm) {
    transform: translate(0, 0);
  }

  &:before {
    right: 0;
  }
}

.nav-aside-main {
  > li {

    > a {
      display: block;
      min-height: $nav-aside-item-height;
    }
  }
}
