/**
 * Navigation
 * --------------------------------------------------
 * - navigation behaviour states
 * - top navigation
 * - left navigation
 * - bar
 */




/**
 * HTML behaviour when side navigation is open
 */
html.nav-left-open {

  body {
    overflow-x: hidden;
  }

  @include mq($screen-sm, "max") {
    .main {
      transform: translate($nav-aside-width, 0);
    }
    .nav-left {
      transform: translate(0, 0);
    }
  }
}




/**
 * Default behaviour is that there is a fixed nav-top,
 * so we need to 'fix' the body's padding
 */
body {
  padding-top: rem($nav-top-height);

  // If the nav-top for some reason needs to scroll with the page
  &.has-relative-nav-top {
    padding-top: 0;

    .nav-top {
      position: relative;
    }
  }

  &.reset-padding {
    padding-top: 0;

    .main {
      @include mq($screen-sm) {
        padding-left: 0;
      }
    }
  }
}

.main {
  transition: opacity ($animation-speed * 2) linear, padding $animation-speed linear, transform $animation-speed linear;

  @include mq($screen-sm) {
    padding-left: rem($nav-aside-width);
  }

  /**
   * ng-animate classes
   */
  &.ng-enter {
    opacity: 0;
  }
  &.ng-leave {
    opacity: 1;
  }
  &.ng-enter.ng-enter-active {
    opacity: 1;
  }
  &.ng-leave.ng-leave-active {
    opacity: 0;
  }
}




/**
 * Top navigation
 */

.nav-top {
  @include bar($nav-top-height, $nav-top-bg-color, $nav-top-color, $nav-top-link-color, $nav-top-link-hover-color, $nav-top-link-bg-hover-color, $nav-top-padding, false);
  position: fixed;
  top: 0;
  width: 100%;
  z-index: layer('nav-top');

  a.btn,
  a.btn-primary,
  button,
  input {
    border: none;
  }

  &-branding {
    float: left;
    height: rem($nav-top-height);
    line-height: rem($nav-top-height);
    overflow: auto;
    position: relative;
    z-index: layer('base');

    a {
      color: $nav-top-link-color;
      text-decoration: none;

      &:hover,
      &:active,
      &:focus {
        color: $nav-top-link-hover-color;
      }
    }

    li {
      float: left;
      height: rem($nav-top-height);
      line-height: rem($nav-top-height);

      &.logo {
        padding: 0;

        a {
          background: $logo-bg-color image-url($logo) no-repeat center center;
          background-size: cover;
          display: block;
          height: rem($logo-height);
          margin: rem(0 $nav-top-padding 0 0);
          padding: 0;
          // transition: height $animation-speed linear;
          width: rem($logo-width);

          span {
            @extend .sr-only;
          }
        }
      }

      &.toggle {
        cursor: pointer;
        @include mq($screen-sm) {
          display: none;
        }
      }

      &.app {
        padding: rem(0 $nav-top-padding);
        @include mq($screen-sm, "max") {
          display: none;
        }
      }
    }

    img {
      float: left;
      height: rem($nav-top-height);
      width: auto;
    }

    h1 {
      font-size: rem($font-size-base);
      font-weight: 700;
      line-height: rem($nav-top-height);
      margin: 0;
    }
  }
}




/**
 * Left navigation
 */

.nav-left {
  left: 0;
  transform: translate(rem(-$nav-aside-width), 0);
  transition: transform $animation-speed linear;

  @include mq($screen-sm) {
    transform: translate(0, 0);
  }

  &:before {
    right: 0;
  }
}




/**
 * Bar
 */
.bar {
  @include bar($nav-top-height, transparent, $bar-link-color);
}
