/**
 * Navigation
 * --------------------------------------------------
 * - navigation behaviour states
 * - top navigation
 * - left navigation
 */




/**
 * HTML behaviour when side navigation is open
 */
html.nav-left-open {

  body {
    overflow-x: hidden;
  }

  @include mq($screen-sm, "max") {
    .main {
      transform: translate($nav-aside-width, 0);
    }
    .nav-left {
      transform: translate(0, 0);
    }
  }
}




/**
 * Default behaviour is that there is a fixed nav-top,
 * so we need to 'fix' the body's padding
 */
body {
  padding-top: rem($nav-top-height);

  // If the nav-top for some reason needs to scroll with the page
  &.has-relative-nav-top {
    padding-top: 0;

    .nav-top {
      position: relative;
    }
  }
}

.main {
  transition: padding $animation-speed linear, transform $animation-speed linear;

  @include mq($screen-sm) {
    padding-left: rem($nav-aside-width);
  }
}




/**
 * Top navigation
 */

.nav-top {
  @include bar();

  overflow: auto;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: layer('nav-top');

  &-branding {
    float: left;
    position: relative;
    z-index: layer('base');

    li {
      float: left;

      &.logo {
        a {
          float: left ;
          margin: rem(0 $bar-padding 0 0);
          padding: 0;
        }
      }

      &.toggle {
        @include mq($screen-sm) {
          display: none;
        }
      }

      &.app {
        @include mq($screen-sm, "max") {
          display: none;
        }
      }
    }

    img {
      float: left;
      height: rem($bar-height);
      width: auto;
    }

    h1 {
      font-size: rem($font-size-base);
      font-weight: 700;
      line-height: rem($nav-top-height);
      margin: 0;
    }
  }
}




/**
 * Left navigation
 */

.nav-left {
  @include nav-aside();

  left: 0;
  transform: translate(rem(-$nav-aside-width), 0);
  transition: transform $animation-speed linear;

  @include mq($screen-sm) {
    transform: translate(0, 0);
  }

  &:before {
    right: 0;
  }
}

.nav-aside-list {

  .badge {
    background-color: $nav-aside-badge-background-color;
    color: $nav-aside-badge-color;
    float: right;
  }


  /**
   * All levels
   */

  li {
    transition: height $animation-speed linear;

    a {
      color: $nav-aside-link-color;
      display: table;
      text-decoration: none;
      width: 100%;

      &:hover,
      &:active,
      &:focus {
        background: rgba(0, 0, 0, .05);
        color: $nav-aside-link-hover-color;

        .badge {
          background-color: $nav-aside-badge-hover-color;
          color: $nav-aside-badge-hover-text-color;
        }
      }

      > *, {
        display: table-cell;
        vertical-align: top;
      }
    }

    i {
      padding: rem(4 10 0 0);
    }

    &.open {
      height: auto;
    }

    &.active {
      > a {
        background-color: $nav-aside-link-active-background-color;
        color: $nav-aside-link-active-color;

        .badge {
          background-color: $nav-aside-badge-active-color;
          color: $nav-aside-badge-active-text-color;
        }
      }

      ul {
        &:before {
          color: $nav-aside-link-active-color;
        }
      }
    }

    &.open,
    &.active {
      background: $nav-aside-item-open-color;

      ul {
        &:before {
          transform: rotate(180deg);
        }

        li {
          a {
            border-left: rem(15) solid $nav-aside-item-open-color;
          }
        }
      }
    }
  }


  /**
   * One level deep
   */

  > li {
    display: block;
    /*height: rem($nav-aside-item-height);*/
    overflow: hidden;
    position: relative;
    width: 100%;

    > a {
      border-top: 1px solid $nav-aside-item-border-color;
      font-weight: 700;
      padding: rem(($nav-aside-item-height - ($line-height-computed)) / 2);
      width: 100%;
    }

    &:first-child {
      > a {
        border-top-color: rgba(0, 0, 0, .1);
      }
    }

    &:last-child {
      border-bottom: 1px solid $nav-aside-item-border-color;
    }

    &.can-open {
      > a {
        padding-right: rem(30);
      }
    }
  }


  /**
   * Two levels deep
   */

  ul {
    display:none;
    &:before {
      content: "\f0d7";
      font-family: FontAwesome;
      font-style: normal;
      font-weight: normal;
      pointer-events: none;
      position: absolute;
      right: rem(($nav-aside-item-height - ($line-height-computed)) / 2);
      text-decoration: inherit;
      top: rem(($nav-aside-item-height - ($line-height-computed)) / 2);
      transition: color $animation-speed linear, transform $animation-speed linear;
      z-index: layer('pseudo');
    }

    a {
      border-left: rem(15) solid $nav-aside-bg-color;
      font-weight: 600;
      padding: rem((($nav-aside-subitem-height - $line-height-computed) / 2) 15);
    }
  }
}
